// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TQ.Infraestructure.EFrameworkCore.SqlServer;

#nullable disable

namespace TQ.Proveedores.Infraestructure.Data.Migrations
{
    [DbContext(typeof(Entities))]
    [Migration("20241205141803_Add_Column_Accion")]
    partial class Add_Column_Accion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EP_Evaluacion_OrdenCompra", b =>
                {
                    b.Property<Guid>("EvaluacionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdenesCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EvaluacionesId", "OrdenesCompraId");

                    b.HasIndex("OrdenesCompraId");

                    b.ToTable("EP_Evaluacion_OrdenCompra");
                });

            modelBuilder.Entity("TQ.Domain.Auditable.UserAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ip")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ModifiedProperties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("UserAudit", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Configuracion.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_Rol", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Configuracion.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<Guid?>("JefeDirectoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.HasIndex("JefeDirectoId");

                    b.HasIndex("RolId");

                    b.ToTable("EP_Usuario", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Evaluaciones.Evaluacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("IndicadorCalidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCantidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCumplimiento")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorFecha")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<string>("NombrePeriodo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_Evaluacion", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Evaluaciones.PlanAccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompromisoCorporativoId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Trimestre")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("EP_PlanAccion", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Maestras.CalendarioTQ", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("NombrePeriodo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Trimestre")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_CalendarioTQ", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Maestras.Causal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodigoCausal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_Causal", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Maestras.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("ListaCorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_Proveedor", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.OrdenesDeCompra.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CantidadAceptada")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 5)
                        .HasColumnType("decimal(19,5)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CantidadDevuelta")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 5)
                        .HasColumnType("decimal(19,5)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CantidadRechazada")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 5)
                        .HasColumnType("decimal(19,5)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CantidadRecibida")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 5)
                        .HasColumnType("decimal(19,5)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CantidadSolicitada")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(19, 5)
                        .HasColumnType("decimal(19,5)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("CausalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoCalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comentario")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("Consignado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<int>("Dias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("DiasAtraso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("EntregaDirecta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("FechaDespacho")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IndicadorCalidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCalidadSys")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCantidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCantidadSys")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCumplimiento")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorCumplimientoDefinitivo")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorFecha")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("IndicadorFechaSys")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal(5,1)")
                        .HasDefaultValue(0m);

                    b.Property<int>("LeadTimeCalculado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("LeadTimeMaestra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("LeadTimeReal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NumLote")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NumOC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("OrdenCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<bool>("Urgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("CausalId");

                    b.HasIndex("OrdenCompraId");

                    b.ToTable("EP_Evento", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.OrdenesDeCompra.OrdenCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodInsumoServ")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("CompraDesarrollo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("CompradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("DescInsumoServ")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Moneda")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NumOC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("OrganizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoInsumo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TipoOC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnidadMedida")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UnidadProductiva")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("EP_OrdenCompra", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.Parametro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrganizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(155);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.ToTable("EP_Parametro", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.ParametroDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NumCampo")
                        .HasColumnType("int");

                    b.Property<Guid>("ParametroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.HasIndex("ParametroId");

                    b.ToTable("EP_ParametroDetalle", (string)null);
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.ParametroValor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Campo1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo10")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo6")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo7")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo8")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Campo9")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.Property<Guid>("ParametroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Default");

                    b.HasKey("Id");

                    b.HasIndex("ParametroId");

                    b.ToTable("EP_ParametroValor", (string)null);
                });

            modelBuilder.Entity("EP_Evaluacion_OrdenCompra", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Evaluaciones.Evaluacion", null)
                        .WithMany()
                        .HasForeignKey("EvaluacionesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TQ.Proveedores.Domain.OrdenesDeCompra.OrdenCompra", null)
                        .WithMany()
                        .HasForeignKey("OrdenesCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Configuracion.Usuario", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Configuracion.Usuario", "JefeDirecto")
                        .WithMany()
                        .HasForeignKey("JefeDirectoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TQ.Proveedores.Domain.Configuracion.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JefeDirecto");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Evaluaciones.PlanAccion", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Configuracion.Usuario", "Comprador")
                        .WithMany()
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TQ.Proveedores.Domain.Maestras.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.OrdenesDeCompra.Evento", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Maestras.Causal", "Causal")
                        .WithMany("Eventos")
                        .HasForeignKey("CausalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TQ.Proveedores.Domain.OrdenesDeCompra.OrdenCompra", "OrdenCompra")
                        .WithMany("Eventos")
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Causal");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.OrdenesDeCompra.OrdenCompra", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Configuracion.Usuario", "Comprador")
                        .WithMany()
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TQ.Proveedores.Domain.Maestras.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.ParametroDetalle", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Parametros.Parametro", "Parametro")
                        .WithMany("Detalles")
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parametro");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.ParametroValor", b =>
                {
                    b.HasOne("TQ.Proveedores.Domain.Parametros.Parametro", "Parametro")
                        .WithMany("Valores")
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parametro");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Configuracion.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Maestras.Causal", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.OrdenesDeCompra.OrdenCompra", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("TQ.Proveedores.Domain.Parametros.Parametro", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Valores");
                });
#pragma warning restore 612, 618
        }
    }
}
